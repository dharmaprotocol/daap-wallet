import styled, { StyledComponentPropsWithRef } from "styled-components/macro";

const SVG = styled.svg``;

type SvgProps = StyledComponentPropsWithRef<typeof SVG> & {
  width: number;
  height: number;
};

const downArrowIconSvg: React.FC<SvgProps> = ({ width, height, ...props }) => (
  <SVG
    width={width}
    height={height}
    viewBox="0 0 16 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      d="M7.29289 15.7071C7.68342 16.0976 8.31658 16.0976 8.70711 15.7071L15.0711 9.34315C15.4616 8.95262 15.4616 8.31946 15.0711 7.92893C14.6805 7.53841 14.0474 7.53841 13.6569 7.92893L8 13.5858L2.34315 7.92893C1.95262 7.53841 1.31946 7.53841 0.928932 7.92893C0.538407 8.31946 0.538407 8.95262 0.928932 9.34315L7.29289 15.7071ZM7 -3.78832e-08L7 15L9 15L9 3.78832e-08L7 -3.78832e-08Z"
      fill="#B2B1AD"
    />
  </SVG>
);

const downCaretIconSvg: React.FC<SvgProps> = ({ width, height, ...props }) => (
  <SVG
    width={width}
    height={height}
    viewBox="0 0 16 8"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      d="M15.179 1.37084L8.1765 7.37259C7.83901 7.66226 7.33999 7.66226 7.0025 7.37259L-2.71841e-07 1.37084L1.1749 0.000116774L7.58995 5.49925L14.0041 0.00101887L15.179 1.37084Z"
      fill="currentColor"
    />
  </SVG>
);
const polygonIconSvg: React.FC<SvgProps> = ({ width, height, ...props }) => (
  <SVG
    width={width}
    height={height}
    viewBox="0 0 1024 1024"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <circle cx="512" cy="512" r="512" fill="#8247E5" />
    <path
      d="M681.469 402.456C669.189 395.312 653.224 395.312 639.716 402.456L543.928 457.228L478.842 492.949L383.055 547.721C370.774 554.865 354.81 554.865 341.301 547.721L265.162 504.856C252.882 497.712 244.286 484.614 244.286 470.325V385.786C244.286 371.498 251.654 358.4 265.162 351.256L340.073 309.581C352.353 302.437 368.318 302.437 381.827 309.581L456.737 351.256C469.018 358.4 477.614 371.498 477.614 385.786V440.558L542.7 403.646V348.874C542.7 334.586 535.332 321.488 521.824 314.344L383.055 235.758C370.774 228.614 354.81 228.614 341.301 235.758L200.076 314.344C186.567 321.488 179.199 334.586 179.199 348.874V507.237C179.199 521.525 186.567 534.623 200.076 541.767L341.301 620.353C353.582 627.498 369.546 627.498 383.055 620.353L478.842 566.772L543.928 529.86L639.716 476.279C651.996 469.135 667.961 469.135 681.469 476.279L756.38 517.953C768.66 525.098 777.257 538.195 777.257 552.484V637.023C777.257 651.312 769.888 664.409 756.38 671.553L681.469 714.419C669.189 721.563 653.224 721.563 639.716 714.419L564.805 672.744C552.525 665.6 543.928 652.502 543.928 638.214V583.442L478.842 620.353V675.125C478.842 689.414 486.21 702.512 499.719 709.656L640.944 788.242C653.224 795.386 669.189 795.386 682.697 788.242L823.922 709.656C836.203 702.512 844.799 689.414 844.799 675.125V516.763C844.799 502.474 837.431 489.377 823.922 482.232L681.469 402.456Z"
      fill="white"
    />
  </SVG>
);

const usdIconSvg: React.FC<SvgProps> = ({ width, height, ...props }) => (
  <SVG
    width={width}
    height={height}
    viewBox="0 0 40 40"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <g filter="url(#filter0_i)">
      <path
        d="M20 40C31.0457 40 40 31.0457 40 20C40 8.9543 31.0457 0 20 0C8.9543 0 0 8.9543 0 20C0 31.0457 8.9543 40 20 40Z"
        fill="url(#paint0_linear)"
      />
      <path
        d="M20 39.5C30.7696 39.5 39.5 30.7696 39.5 20C39.5 9.23045 30.7696 0.5 20 0.5C9.23045 0.5 0.5 9.23045 0.5 20C0.5 30.7696 9.23045 39.5 20 39.5Z"
        stroke="#5779DC"
      />
    </g>
    <path
      fillRule="evenodd"
      clipRule="evenodd"
      d="M18.6901 5.11745C18.6618 5.19489 18.6257 5.97059 18.6099 6.84107L18.5814 8.42384L17.8146 8.6134C17.3928 8.71773 16.7775 8.91014 16.4473 9.041C16.1171 9.172 15.5145 9.5003 15.1083 9.7707C14.7021 10.0412 14.1273 10.5347 13.8311 10.8675C13.535 11.2003 13.1386 11.7775 12.9504 12.1502C12.7622 12.5228 12.5306 13.1979 12.4357 13.6504C12.3173 14.2156 12.2859 14.7096 12.3354 15.2283C12.3752 15.6436 12.5014 16.2853 12.616 16.6544C12.7305 17.0234 12.9985 17.5833 13.2115 17.8985C13.4243 18.2136 13.8323 18.6976 14.118 18.9738C14.4036 19.25 15.0318 19.6718 15.5139 19.911C15.9959 20.1501 16.8487 20.4609 17.4089 20.6015C17.9691 20.7422 18.4752 20.905 18.5335 20.9633C18.5984 21.0284 18.6283 22.3421 18.6105 24.3534L18.5814 27.6373L18.2211 27.6207C18.0229 27.6116 17.5945 27.4736 17.2689 27.314C16.9433 27.1545 16.436 26.8072 16.1416 26.5422C15.8474 26.2773 15.4536 25.7733 15.2668 25.4224C15.08 25.0714 14.8414 24.4637 14.7364 24.0716C14.6314 23.6796 14.511 23.3184 14.4686 23.2689C14.4263 23.2193 13.7444 23.385 12.9535 23.637C12.1623 23.8891 11.5096 24.1518 11.5029 24.2208C11.4962 24.2898 11.5014 24.4697 11.5142 24.6206C11.5271 24.7714 11.676 25.2747 11.8452 25.739C12.0143 26.2032 12.338 26.8625 12.5642 27.2039C12.7905 27.5454 13.2083 28.0637 13.4924 28.3559C13.7765 28.648 14.3094 29.0813 14.6765 29.3189C15.0437 29.5566 15.6565 29.8762 16.0384 30.0294C16.4203 30.1824 17.1241 30.3884 17.6023 30.4872C18.0806 30.5858 18.5075 30.7018 18.5509 30.7449C18.5944 30.7881 18.6437 31.5381 18.6604 32.4116L18.691 34H19.8961H21.1012L21.1318 32.4116C21.1486 31.5381 21.202 30.7836 21.2506 30.735C21.2992 30.6863 21.7537 30.5475 22.2609 30.4264C22.7679 30.3054 23.5525 30.0237 24.0045 29.8003C24.5416 29.5349 25.1022 29.1318 25.6235 28.6362C26.2408 28.049 26.5193 27.6776 26.858 26.9898C27.1721 26.3517 27.3318 25.8466 27.425 25.1965C27.5258 24.4936 27.5252 24.1138 27.4221 23.4961C27.3445 23.032 27.123 22.3605 26.8899 21.8836C26.6064 21.3033 26.2729 20.8513 25.7395 20.3245C25.1768 19.7689 24.7343 19.4576 23.976 19.0835C23.4192 18.8089 22.6186 18.4975 22.1968 18.3913C21.775 18.2852 21.3683 18.1595 21.293 18.112C21.1884 18.0461 21.156 17.2617 21.156 14.8023C21.156 12.8555 21.1977 11.5532 21.2615 11.5138C21.3195 11.4779 21.6196 11.5769 21.9287 11.7336C22.2377 11.8904 22.7114 12.2226 22.9813 12.4717C23.2513 12.7208 23.5925 13.1305 23.7398 13.382C23.8869 13.6334 24.0852 14.0682 24.1805 14.3481C24.2758 14.6281 24.4135 14.8572 24.4866 14.8572C24.5598 14.8572 25.2084 14.6379 25.9279 14.3699C27.1923 13.8989 27.2356 13.8721 27.213 13.5745C27.2002 13.405 26.9693 12.8222 26.7 12.2792C26.3876 11.6494 25.9939 11.0656 25.613 10.6669C25.2844 10.3231 24.7042 9.8403 24.3235 9.5939C23.9322 9.3406 23.2244 9.0235 22.6949 8.86429C22.1799 8.70928 21.6353 8.54637 21.4847 8.50216C21.2111 8.42186 21.2107 8.42 21.156 6.73038L21.1012 5.0389L19.9215 5.00774C19.0381 4.98438 18.7288 5.01191 18.6901 5.11745ZM18.6106 14.4028C18.6371 17.1178 18.6231 17.3922 18.4547 17.457C18.3529 17.496 18.0194 17.4391 17.7134 17.3305C17.4076 17.2219 16.9488 16.9895 16.6941 16.8143C16.4395 16.639 16.1021 16.2751 15.9443 16.0055C15.7621 15.6943 15.6368 15.2852 15.6009 14.8846C15.5698 14.5377 15.5998 14.0485 15.6675 13.7978C15.7353 13.5469 15.9504 13.1029 16.1454 12.8111C16.3683 12.4774 16.7235 12.1468 17.1024 11.9198C17.4338 11.7215 17.8529 11.516 18.0337 11.4633C18.2144 11.4107 18.4116 11.3793 18.4719 11.3937C18.5407 11.41 18.5923 12.529 18.6106 14.4028ZM22.3845 21.8386C22.6684 21.9807 23.0784 22.2531 23.2953 22.4439C23.5123 22.6346 23.81 23.028 23.9567 23.3181C24.1621 23.724 24.2236 24.0181 24.2236 24.5953C24.2236 25.1816 24.1619 25.4693 23.9411 25.9128C23.7858 26.2249 23.5076 26.6077 23.323 26.7632C23.1383 26.9188 22.7505 27.1663 22.4611 27.3131C22.1718 27.4598 21.7722 27.5929 21.573 27.6087L21.2108 27.6373L21.1815 24.677C21.1654 23.0489 21.1767 21.6531 21.2065 21.5753C21.2429 21.4806 21.3611 21.4581 21.5644 21.507C21.7315 21.5474 22.1005 21.6966 22.3845 21.8386Z"
      fill="white"
    />
    <defs>
      <filter
        id="filter0_i"
        x="0"
        y="0"
        width="40"
        height="42"
        filterUnits="userSpaceOnUse"
        colorInterpolationFilters="sRGB"
      >
        <feFlood floodOpacity="0" result="BackgroundImageFix" />
        <feBlend
          mode="normal"
          in="SourceGraphic"
          in2="BackgroundImageFix"
          result="shape"
        />
        <feColorMatrix
          in="SourceAlpha"
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"
          result="hardAlpha"
        />
        <feOffset dy="2" />
        <feGaussianBlur stdDeviation="1.5" />
        <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
        <feColorMatrix
          type="matrix"
          values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.08 0"
        />
        <feBlend mode="normal" in2="shape" result="effect1_innerShadow" />
      </filter>
      <linearGradient
        id="paint0_linear"
        x1="4"
        y1="33.3333"
        x2="40"
        y2="5.33333"
        gradientUnits="userSpaceOnUse"
      >
        <stop stopColor="#142863" />
        <stop offset="1" stopColor="#6782D0" />
      </linearGradient>
    </defs>
  </SVG>
);

const leftArrowIconSvg: React.FC<SvgProps> = ({ width, height, ...props }) => (
  <SVG
    width={width}
    height={height}
    viewBox="0 0 16 16"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
    {...props}
  >
    <path
      d="M0.292893 7.29289C-0.0976314 7.68342 -0.0976315 8.31658 0.292892 8.70711L6.65685 15.0711C7.04738 15.4616 7.68054 15.4616 8.07107 15.0711C8.46159 14.6805 8.46159 14.0474 8.07107 13.6569L2.41421 8L8.07107 2.34315C8.46159 1.95262 8.46159 1.31946 8.07107 0.928931C7.68054 0.538407 7.04738 0.538407 6.65685 0.928931L0.292893 7.29289ZM16 7L0.999999 7L0.999999 9L16 9L16 7Z"
      fill="#B2B1AD"
    />
  </SVG>
);

export const MAPPINGS = {
  usdIcon: usdIconSvg,
  polygonIcon: polygonIconSvg,
  downCaretIcon: downCaretIconSvg,
  downArrowIcon: downArrowIconSvg,
  leftArrowIcon: leftArrowIconSvg
};

interface IconProps {
  name: keyof typeof MAPPINGS;
  width: number;
  height: number;
}

export const Icon: React.FC<IconProps> = ({ name, width, height }) => {
  const iconFunction = MAPPINGS[name];
  return iconFunction({ width, height });
};
